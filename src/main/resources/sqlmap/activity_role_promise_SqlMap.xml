<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="activity_role_promise">
  <resultMap id="ActivityRolePromiseResult" type="com.frogs.activity.entity.ActivityRolePromise">
    <id column="id" jdbcType="INTEGER" property="id"/>
    <result column="role_id" jdbcType="INTEGER" property="roleId"/>
    <result column="role_name" jdbcType="VARCHAR" property="roleName"/>
    <result column="promise_content" jdbcType="VARCHAR" property="promiseContent"/>
  </resultMap>
  <sql id="ByMap_Where_Clause">
    <where>
      <if test="eqId != null">
        and id = #{eqId,jdbcType=INTEGER}
      </if>
      <if test="inIds != null">
        and id in ( ${inIds} )
      </if>
      <if test="inIdList != null">
        and id in <foreach close=")" collection="inIdList" index="index" item="item" open="(" separator=","> #{ item, jdbcType=INTEGER }</foreach>
      </if>
      <if test="gtId != null">
        and id <![CDATA[ > ]]> #{gtId,jdbcType=INTEGER}
      </if>
      <if test="eqRoleId != null">
        and role_id = #{eqRoleId,jdbcType=INTEGER}
      </if>
      <if test="gtRoleId != null">
        and role_id <![CDATA[ > ]]> #{gtRoleId,jdbcType=INTEGER}
      </if>
      <if test="eqRoleName != null">
        and role_name = #{eqRoleName,jdbcType=VARCHAR}
      </if>
      <if test="likeRoleName != null">
        and role_name like #{likeRoleName,jdbcType=VARCHAR}
      </if>
      <if test="eqPromiseContent != null">
        and promise_content = #{eqPromiseContent,jdbcType=VARCHAR}
      </if>
      <if test="likePromiseContent != null">
        and promise_content like #{likePromiseContent,jdbcType=VARCHAR}
      </if>
    </where>
  </sql>
  <select id="selectById" parameterType="java.lang.Integer" resultMap="ActivityRolePromiseResult">
    select id, role_id, role_name, promise_content
    from activity_role_promise
    where id = #{value}
  </select>
  <select id="selectByMap" parameterType="java.util.Map" resultMap="ActivityRolePromiseResult">
    select id, role_id, role_name, promise_content
    from activity_role_promise
    <if test="_parameter != null">
      <include refid="activity_role_promise.ByMap_Where_Clause"/>
      <if test="orderByClause != null">
        order by ${orderByClause}
      </if>
      <include refid="BASE_DAO.pagination_End"/>
    </if>
  </select>
  <select id="selectByMap_count" parameterType="java.util.Map" resultType="java.lang.Integer">
    select count(1) from activity_role_promise
    <if test="_parameter != null">
      <include refid="activity_role_promise.ByMap_Where_Clause"/>
    </if>
  </select>
  <delete id="deleteById" parameterType="java.lang.Integer">
    delete from activity_role_promise
     where id = #{value}
  </delete>
  <delete id="deleteByMap" parameterType="java.util.Map">
    delete from activity_role_promise
    <include refid="activity_role_promise.ByMap_Where_Clause"/>
  </delete>
  <insert id="insert" parameterType="com.frogs.activity.entity.ActivityRolePromise">
    insert into activity_role_promise (id, role_id, role_name, promise_content)
    values (#{id,jdbcType=INTEGER}, #{roleId,jdbcType=INTEGER}, #{roleName,jdbcType=VARCHAR},
      #{promiseContent,jdbcType=VARCHAR})
    <selectKey keyProperty="id" resultType="java.lang.Integer">SELECT LAST_INSERT_ID() as id
      </selectKey>
  </insert>
  <update id="updateById" parameterType="com.frogs.activity.entity.ActivityRolePromise">
    update activity_role_promise
    set role_id = #{roleId,jdbcType=INTEGER},
      role_name = #{roleName,jdbcType=VARCHAR},
      promise_content = #{promiseContent,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByMap" parameterType="java.util.Map">
    update activity_role_promise
    <trim prefix="set" suffixOverrides=",">
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="roleName != null">
        role_name = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="promiseContent != null">
        promise_content = #{promiseContent,jdbcType=VARCHAR},
      </if>
    </trim>
    <if test="_parameter != null">
      <include refid="activity_role_promise.ByMap_Where_Clause"/>
    </if>
  </update>
</mapper>
